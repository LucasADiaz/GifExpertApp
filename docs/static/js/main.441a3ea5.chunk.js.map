{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifts.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifts","category","a","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAgB5C,OACI,0BAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,OAMV,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAjBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,YCNlBG,EAAc,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IACpC,OACI,yBAAKC,UAAU,0CACX,yBACIC,IAAKF,EACLG,IAAKJ,IAET,+BAAKA,EAAL,O,uBCRKK,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdN,EADc,iDACmCK,EADnC,+DAEDE,MAAMP,GAFL,cAEdQ,EAFc,gBAGCA,EAAKC,OAHN,uBAGbC,EAHa,EAGbA,KACDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHf,GAAIe,EAAIf,GACRC,MAAOc,EAAId,MACXC,IAAG,UAAEa,EAAIC,cAAN,aAAE,EAAYC,iBAAiBf,QARtB,kBAYbW,GAZa,4CAAH,sDCIZK,EAAU,SAAC,GAAkB,IAAhBX,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EACZrB,mBAAS,CAC/B0B,KAAM,GACNO,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAmBtC,OAbAC,qBAAU,WACNhB,EAASC,GACJgB,MAAM,SAAAC,GACHH,EAAS,CACTT,KAAMY,EACNL,SAAS,SAIlB,CAACZ,IAIGa,EDbwBK,CAAalB,GAAhCS,EAJyB,EAI9BJ,KAAaO,EAJiB,EAIjBA,QAIpB,OACI,oCACA,wBAAIhB,UAAU,qCAAd,IAAoDI,EAApD,KACCY,GAAW,uBAAGhB,UAAU,oCAAb,WACZ,yBAAKA,UAAU,aAEHa,EAAOF,KAAI,SAACC,GACR,OAAO,kBAAC,EAAD,eACHW,IAAKX,EAAIf,IACLe,UElBnBY,EAAe,WAAM,MAGMzC,mBAAS,CAAC,cAHhB,mBAGvB0C,EAHuB,KAGX3C,EAHW,KAM9B,OACI,6BACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEQ2C,EAAWd,KAAI,SAAAP,GAAQ,OACnB,kBAAC,EAAD,CAASmB,IAAKnB,EAAUA,SAAUA,UCd1DsB,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.441a3ea5.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2) {\r\n        setCategories(cats => [inputValue, ...cats])\r\n        setInputValue('')\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\" \r\n                value={inputValue}\r\n                onChange={ handleInputChange }\r\n            />  \r\n        </form>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","import React, { Component } from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img \r\n                src={url}\r\n                alt={title}\r\n            />\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}","\r\n    export const getGifts = async( category )=>{\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${ category }&limit=10&api_key=jVz12qzqr2w0T6wqUerHJ9MEKJwUn09p`\r\n        const resp = await fetch(url);\r\n        const {data} = await resp.json();\r\n        const gifs = data.map( img => {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        })\r\n        \r\n        return gifs\r\n    }","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { getGifts } from '../helpers/getGifts';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n\r\n    //costumize Hook\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n   \r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animated__animated animate_fadeIn\"> {category} </h3>\r\n        {loading && <p className=\"animated__animated animate_flash\">loading</p>}\r\n        <div className=\"card-grid\">\r\n                {\r\n                    images.map((img) => {\r\n                        return <GifGridItem \r\n                            key={img.id} \r\n                            {...img}\r\n                        /> \r\n                    })\r\n                }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifts } from \"../helpers/getGifts\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n        getGifts(category)\r\n            .then( imgs => {\r\n                setstate({\r\n                data: imgs,\r\n                loading: false\r\n                })\r\n            })\r\n                \r\n    }, [category]);\r\n\r\n \r\n\r\n    return state; // {data:[], loading:true}\r\n}","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    // const categories = ['One Punch', 'Samurai X', 'Dragon Ball']\r\n    const [categories, setCategories] = useState(['One Punch'])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr></hr>\r\n            \r\n            <ol>\r\n                {\r\n                    categories.map(category => \r\n                        <GifGrid key={category} category={category}/>\r\n                    )\r\n                } \r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />, \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}